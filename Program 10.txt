1
declare 
   a number;   
   c number;  
function fact(x in number)   
return number  
is  
   a integer;
   b integer;
   i integer:=1; 
begin 
   a:=x;
   b:=x;
   while i<a loop
      b:=b*i;
      i:=i+1;
   end loop;  
   return b;  
end;   
begin 
   a:=&a;     
   c:=fact(a);  
   dbms_output.put_line('Factorial is '|| c); 
end;
/

Enter value for a: 5
old  20:    a:=&a;
new  20:    a:=5;
Factorial is 120

2
declare 
   a number;   
   c number;  
function rev(x in number)   
return number  
is  
   a integer;
   b integer;
   c integer;
   i integer:=0; 
begin 
   a:=x;
   c:=x;
   while a!=0 loop
      b:=mod(a,10);
      i:=i*10+b;
      a:=floor(a/10);
   end loop;  
   if i=c then
   	dbms_output.put_line('Palindrome'); 
   else
        dbms_output.put_line('Not a palindrome');
   end if; 
   return i;  
end;   
begin 
   a:=&a;     
   c:=rev(a);  
   dbms_output.put_line('Reverse is '|| c); 
end;
/

Enter value for a: 123
old  21:    a:=&a;
new  21:    a:=123;
Not a palindrome
Reverse is 321

3
declare 
   a number;   
   c number;  
function arm(x in number)   
return number  
is  
   a integer;
   b integer;
   c integer;
   i integer:=0; 
begin 
   a:=x;
   c:=x;
   while a!=0 loop
      b:=mod(a,10);
      i:=i+b*b*b;
      a:=floor(a/10);
   end loop;  
   if i=c then
   	dbms_output.put_line('Armstrong number'); 
   else
        dbms_output.put_line('Not an armstrong number');
   end if; 
   return i;  
end;   
begin 
   a:=&a;     
   c:=arm(a);
end;
/

Enter value for a: 153
old  27:    a:=&a;
new  27:    a:=153;
Armstrong number

4
declare 
   a number;   
   c number;  
function sum2(x in number)   
return number  
is  
   n integer;
   i integer; 
begin 
   n:=x;
   i:=(n*n+n)/2; 
   return i;  
end;   
begin 
   a:=&a;     
   c:=sum2(a);
   insert into sum values(a,c);
end;
/

Enter value for a: 5
old  15:    a:=&a;
new  15:    a:=5;

PL/SQL procedure successfully completed.

SQL> select * from sum;

        NO        SUM
---------- ----------
         5         15

5
declare 
   a number;   
   c number; 
   d number; 
function sq(x in number)   
return number  
is  
   n integer;
   i integer; 
begin 
   n:=x;
   i:=sqrt(n); 
   return i;  
end;  
function cube(x in number)   
return number  
is  
   n integer;
   i integer; 
begin 
   n:=x;
   i:=power(n,1/3); 
   return i;  
end;  
begin 
   a:=&a;     
   c:=sq(a);
   d:=cube(a);
   insert into cubesq values(a,c,d);
end;
/

Enter value for a: 64
old  26:    a:=&a;
new  26:    a:=64;

PL/SQL procedure successfully completed.

SQL> select * from cubesq;

        NO     SQUARE       CUBE
---------- ---------- ----------
        64          8          4